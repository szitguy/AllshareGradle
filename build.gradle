plugins {
    id "com.jfrog.bintray" version "1.7"
}

def bintrayApiKey = BINTRAY_API_KEY
def bintrayUser = BINTRAY_USER
def versionName = '1.0.1'
def group_id = 'cn.itguy'
def artifact_id = 'allshare-gradle-plugin'

group group_id
version versionName

apply plugin: 'groovy'

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'com.googlecode.jarjar', name: 'jarjar', version: '1.3'
}

// ---------- 上传bintray时用以下脚本 ----------

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = artifact_id
        desc = 'a gradle plugin for allshare to modify some code'
        websiteUrl = 'https://github.com/szitguy/AllshareGradle'
        issueTrackerUrl = 'https://github.com/szitguy/AllshareGradle/issues'
        vcsUrl = 'https://github.com/szitguy/AllshareGradle'
        publicDownloadNumbers = true
        licenses = ['MIT']
    }

}

apply plugin: 'maven-publish'

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId group_id
            artifactId artifact_id
            version versionName
        }
    }
}

// ---------- 本地测试时用以下代码 ----------

//apply plugin: 'maven'
//
//// 声明发布maven库的task,用gradle执行即可发布到指定url
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: uri('./out/mavenlib/'))
//        }
//    }
//}
